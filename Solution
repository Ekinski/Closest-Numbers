using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the closestNumbers function below.
    static int[] closestNumbers(int[] arr) {
        List<int> list = new List<int>();
        Array.Sort(arr);
        int diff = Math.Abs(arr[0] - arr[1]);
        for( int a = 0; a < arr.Length -1; a++){
            for ( int b = a +1; b < arr.Length; b++){
                if (diff < Math.Abs(arr[a] - arr[b])){
                    break;
                } else if (diff == Math.Abs(arr[a] - arr[b])){
                    list.Add(arr[a]);
                    list.Add(arr[b]);
                } else {
                    diff = Math.Abs(arr[a] - arr[b]);
                    list.Clear();
                    list.Add(arr[a]);
                    list.Add(arr[b]);
                    continue;
                }
                
            }
        }


        
        int[] answer = list.ToArray();
        return answer;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp))
        ;
        int[] result = closestNumbers(arr);

        textWriter.WriteLine(string.Join(" ", result));

        textWriter.Flush();
        textWriter.Close();
    }
}
